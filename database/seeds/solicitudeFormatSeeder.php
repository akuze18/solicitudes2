<?php

use App\Models\FormatList;
use App\Models\solicitudFormat;
use App\Models\solicitudType;
use Illuminate\Database\Seeder;

class solicitudeFormatSeeder extends Seeder
{
    /**
     * Run the database seeds.
     *
     * @return void
     */
    public function run()
    {
        //Definimos listados de campos desplegagles
        $tipo_proveedor = [['EMP_RELAC','Proveedores EERR'],
            ['HONORARIOS','Honorarios'],
            ['PR_CARNES','Proveedor Carnes'],
            ['PR_FLETES','Fletes por pagar'],
            ['PR_MAT','Proveedores Materia Prima'],
            ['PR_MAT R10','Proveedor Mat Prima Ret 10%'],
            ['PR_MAT R19','Proveedor Mat Prima Ret 19%'],
            ['PR_VARIOS','Proveedores Varios']];
        $pais_nacional =[
            ['CL','Chile']
        ];
        $paises_ex = [
            ['AF','Afghanistan'],
            ['AX','Aland Islands'],
            ['AL','Albania'],
            ['DZ','Algeria'],
            ['AS','American Samoa'],
            ['AD','Andorra'],
            ['AO','Angola'],
            ['AI','Anquilla'],
            ['AQ','Antarctica'],
            ['AG','Antigua and Barbuda'],
            ['AR','Argentina'],
            ['AM','Armenia'],
            ['AW','Aruba'],
            ['AU','Australia'],
            ['AT','Austria'],
            ['AZ','Azerbaijan'],
            ['BS','Bahamas'],
            ['BH','Bahrain'],
            ['BD','Bangladesh'],
            ['BB','Barbados'],
            ['BY','Belarus'],
            ['BE','Belgium'],
            ['BZ','Belize'],
            ['BJ','Benin'],
            ['BM','Bermuda'],
            ['BT','Bhutan'],
            ['BO','Bolivia'],
            ['BQ','Bonaire'],
            ['BA','Bosnia and Herzegovina'],
            ['BW','Botswana'],
            ['BV','Bouvet Island'],
            ['BR','Brazil'],
            ['IO','British Indian Ocean Territory'],
            ['VG','British Virgin Islands'],
            ['BN','Brunei'],
            ['BG','Bulgaria'],
            ['BF','Burkina Faso'],
            ['BI','Burundi'],
            ['KH','Cambodia'],
            ['CM','Cameroon'],
            ['CA','Canada'],
            ['KY','Cayman Islands'],
            ['CF','Central African Republic'],
            ['CV','Cepe Verde'],
            ['TD','Chad'],
            ['CN','China'],
            ['CX','Christmas Island'],
            ['CC','Cocos (Keeling) Islands'],
            ['CO','Colombia'],
            ['KM','Comoros'],
            ['CG','Congo'],
            ['CD','Congo (DRC)'],
            ['CK','Cook Islands'],
            ['CR','Costa Rica'],
            ['CI','Cote d\'Ivoire'],
            ['HR','Croatia'],
            ['CU','Cuba'],
            ['CW','Curacao'],
            ['CY','Cyprus'],
            ['CZ','Czech Republic'],
            ['DK','Denmark'],
            ['DJ','Djibouti'],
            ['DM','Dominica'],
            ['DO','Dominican Pepublic'],
            ['EC','Ecuador'],
            ['EG','Egypt'],
            ['SV','El Salvador'],
            ['GQ','Equatorial Guinea'],
            ['ER','Eritrea'],
            ['EE','Estonia'],
            ['ET','Ethiopia'],
            ['FK','Falkland Islands (Malvinas)'],
            ['FO','Faroe Islands'],
            ['FJ','Fiji'],
            ['FI','Finland'],
            ['FR','France'],
            ['GF','French Guiana'],
            ['PF','French Polynesia'],
            ['TF','French Southern Territories'],
            ['GA','Gabon'],
            ['GM','Gambia'],
            ['GE','Georgia'],
            ['DE','Germany'],
            ['GH','Ghana'],
            ['GI','Gibraltar'],
            ['GR','Greece'],
            ['GL','Greenland'],
            ['GD','Grenada'],
            ['GP','Guadeloupe'],
            ['GU','Guam'],
            ['GT','Guatemala'],
            ['GG','Guernsey'],
            ['GN','Guinea'],
            ['GW','Guinea Bissau'],
            ['GY','Guyana'],
            ['HT','Haiti'],
            ['HM','Heard Island'],
            ['VA','Holy See (Vatican City)'],
            ['HN','Honduras'],
            ['HK','Hong Kong (SAR)'],
            ['HU','Hungary'],
            ['IS','Iceland'],
            ['IN','India'],
            ['ID','Indonesia'],
            ['IR','Iran'],
            ['IQ','Iraq'],
            ['IE','Ireland'],
            ['IM','Isle of Man'],
            ['IL','Israel'],
            ['IT','Italy'],
            ['JM','Jamaica'],
            ['XJ','Jan Mayen'],
            ['JP','Japan'],
            ['JE','Jersey'],
            ['JO','Jordan'],
            ['KZ','Kazakhstan'],
            ['KE','Kenya'],
            ['KI','Kiribati'],
            ['KR','Korea'],
            ['KW','Kuwait'],
            ['KG','Kyrgyzstan'],
            ['LA','Laos'],
            ['LV','Latvia'],
            ['LB','Lebanon'],
            ['LS','Lesotho'],
            ['LR','Liberia'],
            ['LY','Libya'],
            ['LI','Liechtenstein'],
            ['LT','Lithuania'],
            ['LU','Luxembourg'],
            ['MO','Macao (SAR)'],
            ['MK','Macedonia, FYRO'],
            ['MG','Madagascar'],
            ['MW','Malawi'],
            ['MY','Malaysia'],
            ['MV','Maldives'],
            ['ML','Mali'],
            ['MT','Malta'],
            ['MH','Marshall Islands'],
            ['MQ','Martinique'],
            ['MR','Mauritania'],
            ['MU','Mauritius'],
            ['YT','Mayotte'],
            ['MX','Mexico'],
            ['FM','Micronesia'],
            ['MD','Moldava'],
            ['MC','Monaco'],
            ['MN','Mongolia'],
            ['ME','Montenegro'],
            ['MS','Montserrat'],
            ['MA','Morocco'],
            ['MZ','Mozambique'],
            ['MM','Myanmar'],
            ['NA','Namibia'],
            ['NR','Nauru'],
            ['NP','Nepal'],
            ['NL','Netherlands'],
            ['NC','New Caledonia'],
            ['NZ','New Zealand'],
            ['NI','Nicaragua'],
            ['NE','Niger'],
            ['NG','Nigeria'],
            ['NU','Niue'],
            ['NF','Norfolk Island'],
            ['KP','North Korea'],
            ['MP','Northern Mariana Islands'],
            ['NO','Norway'],
            ['OM','Oman'],
            ['PK','Pakistan'],
            ['PW','Palau'],
            ['PS','Palestinian Authority'],
            ['PA','Panama'],
            ['PG','Papua New Guinea'],
            ['PY','Paraguay'],
            ['PE','Peru'],
            ['PH','Philippines'],
            ['PN','Pitcairn Islands'],
            ['PL','Poland'],
            ['PT','Portugal'],
            ['PR','Puerto Rico'],
            ['QA','Qatar'],
            ['RE','Reunion'],
            ['RO','Romania'],
            ['RU','Russia'],
            ['RW','Rwanda'],
            ['XS','Saba'],
            ['BL','Saint Barthelemy'],
            ['SH','Saint Helena'],
            ['KN','Saint Kitts and Nevis'],
            ['LC','Saint Lucia'],
            ['MF','Saint Martin (French part)'],
            ['PM','Saint Pierre and Miquelon'],
            ['VC','Saint Vincent and Grenadines'],
            ['WS','Samoa'],
            ['SM','San Marino'],
            ['ST','Sao Tome and Principe'],
            ['SA','Saudi Arabia'],
            ['SN','Senegal'],
            ['RS','Serbia'],
            ['SC','Seychelles'],
            ['GS','SGSSI'],
            ['SL','Sierra Leone'],
            ['SG','Singapore'],
            ['XE','Sint Eustatius'],
            ['SX','Sint Maarten'],
            ['SK','Slovakia'],
            ['SI','Slovenia'],
            ['SB','Solomon Islands'],
            ['SO','Somalia'],
            ['ZA','South Africa'],
            ['ES','Spain'],
            ['LK','Sri Lanka'],
            ['SD','Sudan'],
            ['SR','Suriname'],
            ['SJ','Svalbard'],
            ['SZ','Swaziland'],
            ['SE','Sweden'],
            ['CH','Switzerland'],
            ['SY','Syria'],
            ['TW','Taiwan'],
            ['TJ','Tajikistan'],
            ['TZ','Tanzania'],
            ['TH','Thailand'],
            ['TL','Timor Leste'],
            ['TG','Togo'],
            ['TK','Tokelau'],
            ['TO','Tonga'],
            ['TT','Trinidad and Tobago'],
            ['TN','Tunisia'],
            ['TR','Turkey'],
            ['TM','Turkmenistan'],
            ['TC','Turks and Caicos Islands'],
            ['TV','Tuvalu'],
            ['UM','U.S. Minor Outlying Islands'],
            ['VI','U.S. Virgin Islands'],
            ['UG','Uganda'],
            ['UA','Ukraine'],
            ['GB','Uniged Kingdom'],
            ['AE','United Arab Emirates'],
            ['US','United States'],
            ['UY','Uruguay'],
            ['UZ','Uzbekistan'],
            ['VU','Vanuatu'],
            ['VE','Venezuela'],
            ['VN','VietNam'],
            ['WF','Wallis and Futuna'],
            ['EH','Western Sahara'],
            ['YE','Yemen'],
            ['ZM','Zambia'],
            ['ZW','Zimbabwe']
        ];
        $plan_impuesto = [['ESPEC_COMBUST','Impto Especifico a Los Combust'],
            ['EXENTOC','Exento Compras'],
            ['EXENTOV','Exento Ventas'],
            ['HONORAR_10%','Retención de Honorarios 10%'],
            ['IVAC','IVA Crédito Fiscal'],
            ['IVAV','IVA Débito Fiscal'],
            ['RET10C-','Retención 10% Revertido'],
            ['RET19C-','Retención 19% Revertido']];
        $condicion_pago = [['1','10 Dias'],
            ['2','15 días'],
            ['3','18 días'],
            ['4','2 días'],
            ['5','21 días'],
            ['6','30 días'],
            ['7','45 días'],
            ['8','60 dias']];

        //Creamos configuración de solicitud 1  //proveedor nacional
        $type = solicitudType::where('orderBy',1)->first();
        $fields = [
            ['RazonSocial','textbox',50,1,true,true],
            ['NombreCorto','textbox',12,2,false,false],
            ['Rut','textbox',20,3,true,true],
            ['Clase','select',50,4,true,false,$tipo_proveedor],
            ['TitulaCheque','textbox',50,5,false,false],
            ['Giro','textbox',50,6,true,false],
            ['Contacto','textbox',50,7,false,false],
            ['Telefono1','textbox',20,8,false,false],
            ['Telefono2','textbox',20,9,false,false],
            ['Movil','textbox',20,10,false,false],
            ['Fax','textbox',20,11,false,false],
            ['EMail','textbox',100,12,false,false],
            ['PaginaWeb','textbox',100,13,false,false],
            ['Direccion','textarea',250,14,true,false],
            ['Ciudad','textbox',50,15,true,false],
            ['Comuna','textbox',50,16,false,false],
            ['CodigoPostal','textbox',50,17,false,false],
            ['Pais','select',50,18,true,false,$pais_nacional],
            ['PlanImpuestos','select',50,19,true,false,$plan_impuesto],
            ['CondicionDePago','select',50,20,true,false,$condicion_pago],
            ['RutRepresentanteLegal','textbox',20,21,false,false],
            ['NombreRepresentanteLegal','textbox',70,22,false,false],
            ['MotivoDeSolicitud','textarea',250,23,true,false]
        ];
        foreach($fields as $datafield){
            $field = solicitudFormat::where('name_field',$datafield[0])
                ->where('solicitude_type_id',$type->id)->get();
            if(count($field)==0){
                $format = solicitudFormat::create([
                    'solicitude_type_id'=>$type->id,
                    'name_field'=>$datafield[0],
                    'type_field'=>$datafield[1],
                    'long_field'=>$datafield[2],
                    'orderBy'=>$datafield[3],
                    'required'=>$datafield[4],
                    'title'=>$datafield[5],
                ]);
                if($format->type_field=='select'){
                    //insert its list
                    foreach($datafield[6] as $lista){
                        FormatList::create([
                            'format_id'=>$format->id,
                            'value'=>$lista[0],
                            'display'=>$lista[1]
                        ]);
                    }
                }
            }
        }
        //Creamos configuración de solicitud 3  //proveedor extranjero
        $type = solicitudType::where('orderBy',3)->first();
        $fields = [
            ['RazonSocial','textbox',50,1,true,true],
            ['NombreCorto','textbox',12,2,false,false],
            ['Clase','select',50,4,true,false,$tipo_proveedor],
            ['TitulaCheque','textbox',50,5,false,false],
            ['Giro','textbox',50,6,true,false],
            ['Contacto','textbox',50,7,false,false],
            ['Telefono1','textbox',20,8,false,false],
            ['Telefono2','textbox',20,9,false,false],
            ['Movil','textbox',20,10,false,false],
            ['Fax','textbox',20,11,false,false],
            ['EMail','textbox',100,12,false,false],
            ['PaginaWeb','textbox',100,13,false,false],
            ['Direccion','textarea',250,14,true,false],
            ['Ciudad','textbox',50,15,true,false],
            ['Comuna','textbox',50,16,false,false],
            ['CodigoPostal','textbox',50,17,false,false],
            ['Pais','select',50,18,true,false,$paises_ex],
            ['PlanImpuestos','select',50,19,true,false,$plan_impuesto],
            ['CondicionDePago','select',50,20,true,false,$plan_impuesto],
            ['MotivoDeSolicitud','textarea',250,23,true,false]
        ];
        foreach($fields as $datafield){
            $field = solicitudFormat::where('name_field',$datafield[0])
                ->where('solicitude_type_id',$type->id)->get();
            if(count($field)==0){
                $format = solicitudFormat::create([
                    'solicitude_type_id'=>$type->id,
                    'name_field'=>$datafield[0],
                    'type_field'=>$datafield[1],
                    'long_field'=>$datafield[2],
                    'orderBy'=>$datafield[3],
                    'required'=>$datafield[4],
                    'title'=>$datafield[5],
                ]);
                if($format->type_field=='select'){
                    //insert its list
                    foreach($datafield[6] as $lista){
                        FormatList::create([
                            'format_id'=>$format->id,
                            'value'=>$lista[0],
                            'display'=>$lista[1]
                        ]);
                    }
                }
            }
        }

    }
}
